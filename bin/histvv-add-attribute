#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Histvv::Util;

my $usage = <<EOT;
Usage: histvv-add-attributes -x <xpath> -n <attrname> -d <attrvalue> file1.xml ...
       histvv-add-attributes -x <xpath> -l file1.xml ...

Options:
  -x, --xpath <string> XPath expression to select elements
  -n, --name <name>    attribute name
  -d, --data <value>   attribute value
  -l, --list           list matching elements on standard output
  -v, --verbose        verbose output
  -h, --help    show this message
EOT

my %opts = ( list => 0, verbose => 0, help => 0 );
GetOptions(
    \%opts,   'xpath|x=s', 'name|n=s', 'value|data|d=s',
    'list|l', 'verbose|v', 'help|h'
) or die $usage;

if ($opts{help}) {
    print $usage;
    exit;
}

die "Missing XPath expression!\n$usage" unless $opts{xpath};

die "Missing attribute name or value!\n$usage"
  unless ( $opts{list}
    || ( $opts{name} && $opts{data} ) );


my $xp = XML::LibXML->new();

binmode STDOUT, ":utf8" if $opts{list};

foreach my $file (@ARGV) {
    print "$file\n";

    my $doc = $xp->parse_file( $file );
    my @nodes;
    ( $doc, @nodes ) = Histvv::Util::set_attribute(
        doc    => $doc,
        select => $opts{xpath},
        name   => $opts{name},
        value  => $opts{value}
    );

    foreach my $n (@nodes) {
        if ( $opts{list} ) {
            if ( $opts{verbose} ) {
                print $n->toString(0), "\n";
            }
            else {
                my $txt = $n->findvalue('normalize-space(.)');
                print "$txt\n";
            }
        }
    }

    unless ( $opts{list} ) {
        open F, ">$file" or die $!;
        print F $doc->toString(0);
        close F;
        print scalar @nodes, " elements found\n";
    }
}

__END__
