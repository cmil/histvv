#!/usr/bin/perl

use Config::GitLike;
use Histvv::CLI;
use File::Spec;
use File::Temp;
use LWP::UserAgent;
use Data::Beacon;
use Data::Beacon::Collection::DBI;

my $cli = Histvv::CLI->new(with_debug => 1);
my %opts = $cli->get_opts(
    'config|c=s' => undef,
    'db|database|D=s' => undef,
    'cache=s' => undef,
    'list|l' => 0,
    'empty|e' => 0
);

$cli->error('Please specify a config file!')
  unless $opts{config} && -f $opts{config};

my $cfg = Config::GitLike->new(confname => 'beacon.conf');
$cfg->load_file($opts{config});

my $beacon_name = shift || undef;

my $db =
     $opts{db}
  || $cfg->get( key => 'beacon.db' )
  || $cli->error('Missing beacon database.');

my $cache =
     $opts{cache}
  || $cfg->get( key => 'beacon.cache' )
  || File::Temp::tempdir( CLEANUP => 1 );
$cli->error("Beacon cache $cache is not a directory!") unless -d $cache;
$cli->debug("Using beacon cache $cache");

# determine configured beacon names
my @beacon_names;
my %urls = $cfg->get_regexp(key => qr/^beacon\..+\.url$/);
for (sort keys %urls) {
    my @a = split /\./;
    push @beacon_names, $a[1];
}

my $ua = LWP::UserAgent->new(
    'Mozilla/5.0 (compatible; HistVV; http://histvv.uni-leipzig.de)',
    'histvv@gmail.com' );

my $collection = Data::Beacon::Collection::DBI->new(dbi => "SQLite:dbname=$db");

if ($opts{list}) {
    foreach my $name ($collection->list) {
        $cli->say($name);
        if ($opts{verbose}) {
            my $b = $collection->get($name);
            $cli->say( $b->metafields );
        }
    }
    exit;
}

if ($opts{empty}) {
    $cli->chatter("emptying database");
    $collection->remove($_) for $collection->list;
}

foreach my $name (@beacon_names) {
    next if defined $beacon_name && $beacon_name ne $name;

    $cli->chatter("processing '$name'");

    my $cache_file = File::Spec->catfile($cache, "$name.txt");
    unless (-f $cache_file) {
        my $url = $cfg->get(key => "beacon.$name.url");
        $cli->debug("  fetching beacon $url");
        my $r = $ua->get($url);
        die "Cannot get beacon file from $url\n" unless $r->is_success;
        $cli->debug("  saving data to $cache_file");
        open F, ">$cache_file" or die "Cannot open $cache_file: $!\n";
        print F  $r->content or die "Cannot write to $cache_file: $!\n";
        close F;
    }

    my $beacon = beacon($cache_file);

    my $label =
         $cfg->get( key => "beacon.$name.name" )
      || $beacon->meta('NAME')
      || $beacon->meta('MESSAGE')
      || $beacon->meta('INSTITUTION')
      || $name;

    $beacon->meta('LABEL' => $label);

    # fix missing PREFIX header to avoid parser errors
    unless ($beacon->meta('PREFIX')) {
        if ($beacon->meta('FORMAT') eq 'PND-BEACON') {
            $cli->debug("  fixing missing PREFIX header...");
            $beacon->meta('FORMAT' => 'BEACON');
            $beacon->meta('PREFIX' => 'http://d-nb.info/gnd/');
        }
    }
    $cli->debug("inserting beacon '$name' into db...");
    $collection->insert($name, $beacon);
}


__END__

=head1 NAME

histvv-beacon-tool - maintain a database of beacon files

=head1 SYNOPSIS

  histvv-beacon-tool --config file [ --cache dir ] [ --db dbfile ] [ name ]
  histvv-beacon-tool --help | --man

=head1 DESCRIPTION

I<histvv-beacon-tool> reads the locations of beacon files from a
configuration file, fetches them and loads them into a database.

=head1 OPTIONS

=over

=item B<--config>, B<-c> file

Path to the configuration file.

=item B<--cache> directory

A directory to temporarily store the downloaded beacon files in.

=item B<--db>, B<-D> file

Path to the beacon database.

=item B<--list>, B<-l>

List beacons in database.

=item B<--empty>, B<-e>

Empty database before loading new data.

=item B<--verbose>, B<-v>

Verbose feedback.

=item B<--help>, B<-h>

Display short help message and exit. If used together with B<-v> the
entire manpage will be displayed.

=item B<--man>

Display manpage and exit. This is equivalent to B<-h> B<-v>.

=back

=head1 CONFIGURATION EXAMPLE

  [beacon]
    db = /var/www/histvv/db/beacon.db
    cache = /var/www/histvv/cache/beacons

  [beacon "example"]
    url = http://www.example.org/beacon.txt

  [beacon "wikipedia"]
    url = http://toolserver.org/~apper/dewp_pnd_beacon.txt
    option = prepend

=head1 SEE ALSO

L<Data::Beacon>, L<Data::Beacon::Collection::DBI>

=head1 AUTHOR

Carsten Milling, C<< <cmil at hashtable.de> >>

=head1 COPYRIGHT & LICENSE

Copyright 2012 Carsten Milling, all rights reserved.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut
